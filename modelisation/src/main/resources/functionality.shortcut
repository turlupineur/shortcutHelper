functionality refreshFunctionality {
	using : propertyHelper
			shortcutHelper;
	input parameter :
	returns : void
	implementation {
		
		variable EXCEPTION exceptionOccuredRefreshProperties = null
		variable EXCEPTION exceptionOccuredRefreshShortcuts = null
		
		exceptionOccuredRefreshProperties = callComponentMethod shortcutHelper.shortcutHelper.refresh()
		
		if exceptionOccuredRefreshProperties = @ any exception @
		{
			showerror "Error while refreshing properties: " @ + exceptionOccuredRefreshProperties @
		};
		
		exceptionOccuredRefreshShortcuts = callComponentMethod propertyHelper.propertyHelper.refresh()
		
		if exceptionOccuredRefreshShortcuts = @ any exception @
		{
			showerror "Error while refreshing shortcuts: " @ + exceptionOccuredRefreshShortcuts @
		};
		
		if exceptionOccuredRefreshProperties = null and exceptionOccuredRefreshShortcuts = null
		{
			showinfo "Application refreshed"
		};
	}
}

functionality executerFunctionality{
	@ Functionality in charge of running a shortcut. 
	It will finds the appropriate Functionality to run, pass it all parameters defined for the shortcut and execute
	the functionality. Cannot execute itself@
	
	using : functionalityContainerHelper
			beanUtil
			beanHelper;
	
	input parameter :
		parameter shortcutToExecute SHORTCUT required
		
	
	returns : void
	
	implementation{
		variable CONTAINER_FUNCTIONALITY container ;
		variable FUNCTIONALITY functionalityToExcecute;
		variable STRING beanHelper;
		
		container = callComponentMethod functionalityContainerHelper.functionalityContainerHelper.createAndFillContainer(set clazz = @shortcutToExecute.classRepresentingCommand@
			set params = @shortcutToExecute.params@
		)
		
		functionalityToExcecute = callComponentMethod beanHelper.beanHelper.getBean(
			set beanName = @shortcutToExecute.beanName@
		)
		
		// run functionality with container
		@functionalityToExcecute.run(container, context)@
	}
}

functionality copyToClipboardFunctionality {
	@ Copies a value defined in the shortcut in the clipboard.@
	
	using : setClipboardLogic
			beanUtil
			beanHelper;
	input parameter : 
		parameter clipboard STRING required
	returns : void
	
	implementation
	{
		callLogic setClipboardLogic (
			set clipboardValue = clipboard
		)
		showinfo "Value copied to clipboard !"
	}
}