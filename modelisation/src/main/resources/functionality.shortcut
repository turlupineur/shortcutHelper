functionality refreshFunctionality {
	using : propertyHelper
			shortcutHelper;
	input parameter :
	returns : void 
	implementation {
		
		variable EXCEPTION exceptionOccuredRefreshProperties = null
		variable EXCEPTION exceptionOccuredRefreshShortcuts = null
		
		exceptionOccuredRefreshProperties = callComponentMethod shortcutHelper.shortcutHelper.refresh()
		
		if exceptionOccuredRefreshProperties = @ any exception @
		{
			showerror "Error while refreshing properties: " @ + exceptionOccuredRefreshProperties @
		};
		
		exceptionOccuredRefreshShortcuts = callComponentMethod propertyHelper.propertyHelper.refresh()
		
		if exceptionOccuredRefreshShortcuts = @ any exception @
		{
			showerror "Error while refreshing shortcuts: " @ + exceptionOccuredRefreshShortcuts @
		};
		
		if exceptionOccuredRefreshProperties = null and exceptionOccuredRefreshShortcuts = null
		{
			showinfo "Application refreshed"
		};
	}
}

functionality executerFunctionality{
	using : getClipboardLogic 
			beanHelper
			functionalityContainerHelper
			shortcutFactoryHelper;
	input parameter:
	parameter shortcutToExecute SHORTCUT required
	returns : void
	implementation{
		@ Executes the appropriate command based on the given shortcut.
		  Steps:
		  	
		  	- Retrive the shortcut to execute.
		  	- Replace all ${CLIPBOARD_CONTENT} with the value of the current clipboard in the params.
		  	- Retrieve the bean for the command.
		  	- Creates the appropriate container for the command.
		@
	}
}

functionality copyToClipboardFunctionality {
	@ Copies a value defined in the shortcut in the clipboard.@
	
	using : setClipboardLogic
			beanUtil
			beanHelper;
	input parameter : 
		parameter clipboard STRING required
	returns : void
	
	implementation
	{
		callLogic setClipboardLogic (
			set clipboardValue = clipboard
		)
		showinfo "Value copied to clipboard !"
	}
}

functionality openUrlFunctionality{
	@ Open the url using default internet browser.@
	
	using: ;
	
	input parameter :
		parameter url STRING required
	returns : void
	
	implementation
	{
		@ opens  url in browser @
	}
}